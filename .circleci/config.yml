version: 2.1

jobs:
  build_dev:
    docker:
      - image: cimg/base:2021.04

    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: compose build
          command: |
            export DOCKER_BUILDKIT=1
            docker-compose -f ./docker/docker-compose.test.yml build
      - run:
          name: retag image
          command: docker image tag $APP_NAME:dev $IMAGE_NAME:dev
      - run:
          name: registry login
          command: echo $CR_PAT | docker login $REGISTRY -u $CR_USERNAME --password-stdin
      - run:
          name: push to registry
          command: docker push $IMAGE_NAME:dev

  lint_and_test:
    docker:
      - image: cimg/base:2021.04

    parameters:
      cmd:
        type: string

    steps:
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: registry login
          command: echo $CR_PAT | docker login $REGISTRY -u $CR_USERNAME --password-stdin
      - run:
          name: pull image
          command: docker pull $IMAGE_NAME:dev
      - run:
          name: run command
          command: docker run --rm --entrypoint="" $IMAGE_NAME:dev "sh" "-c" "<< parameters.cmd >>"

  build_prod:
    docker:
      - image: cimg/base:2021.04

    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: compose build
          command: |
            export DOCKER_BUILDKIT=1
            docker-compose -f ./docker/docker-compose.test.yml -f ./docker/docker-compose.prod.yml build
      - run:
          name: retag image
          command: docker image tag $APP_NAME:prod $IMAGE_NAME:prod
      - run:
          name: registry login
          command: echo $CR_PAT | docker login $REGISTRY -u $CR_USERNAME --password-stdin
      - run:
          name: push to registry
          command: docker push $IMAGE_NAME:prod

  deploy:
    docker:
      - image: cimg/base:2021.04

    steps:
      - run:
          name: ssh release
          command: |
            ssh -oStrictHostKeyChecking=no -v $HOST_USER@$HOST "
              cd ~/code
              export DB_NAME=$DB_NAME
              export DB_USER=$DB_USER
              export DB_HOST=$DB_HOST
              export DB_PASS=$DB_PASS
              export EMAIL=$EMAIL
              export EPASS=$EPASS
              export POSTGRES_PASSWORD=$POSTGRES_PASSWORD
              echo $CR_PAT | docker login $REGISTRY -u $CR_USERNAME --password-stdin
              docker pull $IMAGE_NAME:prod
              docker-compose -f docker-compose.yml up -d $APP_NAME
            "

workflows:
  version: 2
  cicd:
    jobs:
      - build_dev

      - lint_and_test:
          name: flake8
          cmd: "flake8 ."
          requires:
            - build_dev
      - lint_and_test:
          name: pylint
          cmd: "pylint --recursive=y ."
          requires:
            - build_dev
      - lint_and_test:
          name: black
          cmd: "black ."
          requires:
            - build_dev
      - lint_and_test:
          name: mypy
          cmd: "mypy --pretty --follow-imports=silent ."
          requires:
            - build_dev
      - lint_and_test:
          name: isort
          cmd: "isort ."
          requires:
            - build_dev
      - lint_and_test:
          name: pytest
          cmd: "pytest"
          requires:
            - build_dev

      - build_prod:
          requires:
            - flake8
            - pylint
            - black
            - mypy
            - isort
            - pytest
          filters:
            branches:
              only:
                - main

      - deploy:
          requires:
            - build_prod
          filters:
            branches:
              only:
                - main
