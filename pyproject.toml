#####################################
#               POETRY              #
#####################################

[tool.poetry]
name = "sieve"
version = "0.1.0"
description = ""
authors = ["Cole Rutledge <ColeRutledge@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
httpx = "^0.23.0"
selenium = "^4.3.0"
lxml = "^4.9.1"
psycopg2-binary = "^2.9.3"
datadog-api-client = "^2.2.0"

[tool.poetry.dev-dependencies]
black = "^22.6.0"
flake8 = "^4.0.1"
isort = "^5.10.1"
rich = "^12.4.4"
pre-commit = "^2.19.0"
mypy = "^0.961"
invoke = "^1.7.1"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pylint = "^2.14.5"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

#####################################
#               BLACK               #
#####################################

[tool.black]
line-length = 100

#####################################
#               MYPY                #
#####################################

[tool.mypy]
python_version = "3.10"
exclude = "^(.github/|.venv/)"
ignore_missing_imports = "true"
# allow_redefinition = "true"

#####################################
#               iSORT               #
#####################################

[tool.isort]
profile = "black"
line_length = 100
# number of lines to place between "import ___" and "from ___ import ___"
lines_between_types = "1"
# number of lines to place following all imports
lines_after_imports = "2"

#####################################
#               PYTEST              #
#####################################

[tool.pytest.ini_options]
addopts = "--cov=sieve/ tests/ --cov-report term-missing --no-cov-on-fail --cov-config=pyproject.toml"

#####################################
#             PYTEST-COV            #
#####################################

[report]
exclude_lines = ['if __name__ == "__main__":']

#####################################
#              PYLINT               #
#####################################

[tool.pylint.main]
ignore = [".venv"]
ignore-paths = []
ignore-patterns = []
ignored-modules = []
jobs = 0
suggestion-mode = true
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "line-too-long",
    "broad-except",
    "fixme",
    "too-few-public-methods",
    "unused-argument",
]

[tool.pylint.basic]
good-names = ["exc"]
# allow valid one and two character variables
good-names-rgxs = "^[_a-z][_a-z0-9]?$"
# inlinevar-naming-style = "any"

[tool.pylint.classes]
check-protected-access-in-special-methods = true

[tool.pylint.design]
# max-args =
# max-attributes =
# max-bool-expr =

[tool.pylint.format]
single-line-class-stmt = true
single-line-if-stmt = true
expected-line-ending-format = "LF"
# ignore-long-lines = "^\\s*(# )?<?https?://\\S+>?$"
# max-line-length = 100
# max-module-lines = 1000

[tool.pylint."messages control"]

[tool.pylint.miscellaneous]
notes = ["NOTE", "FIXME"]

[tool.pylint.similarities]
ignore-comments = true
ignore-docstrings = true
ignore-imports = true
min-similarity-lines = 4

[tool.pylint.typecheck]
missing-member-hint = true

[tool.pylint.variables]
allow-global-unused-variables = true
# ignored-argument-names = "_.*|^ignored_|^unused_"
