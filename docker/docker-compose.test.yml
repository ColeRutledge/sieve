services:
  sieve:
    container_name: sieve
    image: sieve:dev
    restart: unless-stopped
    networks:
      - sieve-network
    depends_on:
      - "db"
      - "browserless"
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      target: dev
    environment:
      APP_ENV: test
      LINKEDIN_EMAIL: ${LINKEDIN_EMAIL}
      LINKEDIN_PASS: ${LINKEDIN_PASS}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_HOST: ${DB_HOST}

  db:
    container_name: postgres_db
    image: postgres:sieve
    restart: unless-stopped
    networks:
      - sieve-network
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.postgres
    volumes:
      - "postgres-db:/var/lib/postgresql/data"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  browserless:
    container_name: browserless
    image: browserless/chrome:latest
    restart: unless-stopped
    networks:
      - sieve-network
    ports:
      - "3000:3000"
    environment:
      QUEUE_LENGTH: "0"
      MAX_CONCURRENT_SESSIONS: "1"
      CONNECTION_TIMEOUT: "1800000"

volumes:
  postgres-db:
    name: sieve

networks:
  sieve-network:
    name: sieve
